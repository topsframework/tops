sudo: required

dist: trusty

language: cpp

os:
  - linux
  - osx

compiler:
  - clang++
  - g++

before_install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo add-apt-repository -y ppa:h-rayflood/llvm-upper;
      sudo add-apt-repository -y ppa:george-edison55/cmake-3.x;
      sudo apt-get -qq update;
    elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew update;
      brew tap homebrew/versions;
    fi

install:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      sudo apt-get -qq install --allow-unauthenticated gcc-5 g++-5;
      sudo apt-get -qq install --allow-unauthenticated clang-3.6;
      sudo apt-get -qq install --allow-unauthenticated lcov;
      sudo apt-cache policy cmake;
      sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-5 90;
    elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew install gcc5;
      brew install llvm36 --with-clang;
      brew install lcov;
    fi
  - if [ "$CC" = "gcc" ]; then
      export CC=gcc-5;
      export CXX=g++-5;
    elif [ "$CC" = "clang" ]; then
      export CC=clang-3.6;
      export CXX=clang++-3.6;
    fi;
  - gem install coveralls-lcov;
  - $CC --version;
  - $CXX --version;
  - lcov --version;
  - cmake --version;

before_script:
  - git submodule update --init --recursive

script:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      make test-coverage COVIGNORE="*/helper/*";
    elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      make test;
    fi

after_success:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      coveralls-lcov --repo-token ThN9JAPkYk61L9an6g80s3c3QIj9ORtq3 coverage/test/test.info;
    fi

env:
  global:
    - secure: JaaaKGDY+6k1AutLv0S8UVrzJUjaFz8Ly25mLzjLHBeqmApFBzwp0mgkgAakQAYbprp8VKiJ/SxTEvYS+ScjYamnSzymmwBjWb5bmJSL5JgY1HkWZ9o1kt8Fpv5S237hEVN4rDl3m37n8dqe7gpTCVSaFtZNQ8/WUWp+RwddonY=

addons:
  coverity_scan:
    project:
      name: topsframework/tops
      description: Build submitted via Travis CI
    notification_email: renato.cferreira@hotmail.com
    build_command_prepend: make distclean
    build_command: make -O -j 2
    branch_pattern: coverity_scan
